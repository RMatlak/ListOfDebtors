{"version":3,"sources":["components/MainSite.js","components/Task.js","components/AddList.js","pages/DebtorsPage.js","components/App.js","serviceWorker.js","index.js"],"names":["MainSite","props","react_default","a","createElement","Fragment","className","react_router_dom","onClick","handlePageChange","to","Task","e","console","log","clientX","clientY","name","money","date","secondDate","AddList","addTask","tasks","map","task","components_Task","key","DebtorsPage","currentDate","Date","toISOString","slice","state","_this","value","number","amount","errors","messages","nameIncorrect","moneyIncorrect","handleChange","target","type","setState","handleDateChange","errorsCheck","correct","handleClick","preventDefault","Object","toConsumableArray","push","_this$state","this","for","onChange","id","length","components_AddList","Component","App","basename","process","react_router","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.df76cdcf.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"../styles/MainSite.scss\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst MainSite = props => {\r\n  return (\r\n    <>\r\n      <ul className=\"mainUl\">\r\n        <li>\r\n          <NavLink onClick={props.handlePageChange} to=\"/debtors\">\r\n            Lista Dłużników\r\n          </NavLink>\r\n        </li>\r\n        <li className=\"second\">\r\n          <NavLink>Twoje długi</NavLink>\r\n        </li>\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MainSite;\r\n","import React from \"react\";\r\nimport \"../styles/Task.scss\";\r\n\r\nconst Task = props => {\r\n  const handleOptions = e => {\r\n    console.log(e.clientX);\r\n    console.log(e.clientY);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <li onClick={handleOptions}>\r\n        <p>\r\n          Imię: <strong>{props.name}</strong>\r\n        </p>\r\n        <p>\r\n          Wysokość długu: <strong>{props.money} zł</strong>\r\n        </p>\r\n        <p>\r\n          Data pożyczki: <strong>{props.date}</strong>\r\n        </p>\r\n        <p>\r\n          Data spłaty: <strong>{props.secondDate}</strong>\r\n        </p>\r\n      </li>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Task;\r\n","import React from \"react\";\r\nimport Task from \"./Task\";\r\n\r\nconst AddList = props => {\r\n  const addTask = props.tasks.map(task => {\r\n    return (\r\n      <Task\r\n        key={task.name}\r\n        name={task.name}\r\n        money={task.money}\r\n        date={task.date}\r\n        secondDate={task.secondDate}\r\n      />\r\n    );\r\n  });\r\n\r\n  return <>{addTask}</>;\r\n};\r\n\r\nexport default AddList;\r\n","import React, { Component } from \"react\";\r\nimport \"../styles/DebtorsPage.scss\";\r\nimport AddList from \"../components/AddList\";\r\n\r\nclass DebtorsPage extends Component {\r\n  currentDate = new Date().toISOString().slice(0, 10);\r\n  state = {\r\n    date: this.currentDate,\r\n    secondDate: this.currentDate,\r\n    value: \"\",\r\n    number: \"\",\r\n    amount: 0,\r\n    tasks: [],\r\n    errors: {\r\n      name: false,\r\n      money: false\r\n    }\r\n  };\r\n\r\n  messages = {\r\n    nameIncorrect: \"Musisz podać imię\",\r\n    moneyIncorrect: \"Musisz podać kwotę\"\r\n  };\r\n\r\n  handleChange = e => {\r\n    if (e.target.type === \"text\") {\r\n      this.setState({\r\n        value: e.target.value\r\n      });\r\n    } else if (e.target.type === \"number\") {\r\n      this.setState({\r\n        number: e.target.value\r\n      });\r\n    } else {\r\n      this.setState({\r\n        date: e.target.value\r\n      });\r\n    }\r\n  };\r\n\r\n  handleDateChange = e => {\r\n    this.setState({\r\n      secondDate: e.target.value\r\n    });\r\n  };\r\n\r\n  errorsCheck = () => {\r\n    let name = false;\r\n    let money = false;\r\n    let correct = false;\r\n\r\n    if (this.state.value !== \"\") {\r\n      name = true;\r\n    }\r\n    if (this.state.number !== \"\") {\r\n      money = true;\r\n    }\r\n    if (money && name) {\r\n      correct = true;\r\n    }\r\n\r\n    return {\r\n      correct,\r\n      name,\r\n      money\r\n    };\r\n  };\r\n\r\n  handleClick = e => {\r\n    e.preventDefault();\r\n\r\n    const amount = this.state.amount + this.state.number * 1;\r\n\r\n    const errorsCheck = this.errorsCheck();\r\n    if (errorsCheck.correct) {\r\n      this.setState({\r\n        date: this.currentDate,\r\n        secondDate: this.currentDate,\r\n        value: \"\",\r\n        amount,\r\n        number: \"\",\r\n        errors: {\r\n          name: false,\r\n          money: false\r\n        }\r\n      });\r\n      const task = {\r\n        name: this.state.value,\r\n        money: this.state.number,\r\n        date: this.state.date,\r\n        secondDate: this.state.secondDate\r\n      };\r\n      let tasks = [...this.state.tasks];\r\n      tasks.push(task);\r\n      this.setState({\r\n        tasks\r\n      });\r\n    } else {\r\n      this.setState({\r\n        errors: {\r\n          name: !errorsCheck.name,\r\n          money: !errorsCheck.money\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { date, value, number, secondDate, errors, amount } = this.state;\r\n\r\n    return (\r\n      <>\r\n        <div className=\"debtorsStyle\">\r\n          <label for=\"name\">\r\n            Imię dłużnika\r\n            <input\r\n              onChange={this.handleChange}\r\n              type=\"text\"\r\n              id=\"name\"\r\n              value={value}\r\n            />\r\n            {errors.name ? <span>{this.messages.nameIncorrect}</span> : null}\r\n          </label>\r\n          <label for=\"money\">\r\n            Wysokość długu (zł)\r\n            <input\r\n              onChange={this.handleChange}\r\n              type=\"number\"\r\n              id=\"money\"\r\n              value={number}\r\n            />\r\n            {errors.money ? <span>{this.messages.moneyIncorrect}</span> : null}\r\n          </label>\r\n          <label for=\"start\">\r\n            Data pożyczki\r\n            <input\r\n              onChange={this.handleChange}\r\n              type=\"date\"\r\n              id=\"start\"\r\n              value={date}\r\n            />\r\n          </label>\r\n          <label for=\"done\">\r\n            Planowana data spłaty\r\n            <input\r\n              onChange={this.handleDateChange}\r\n              type=\"date\"\r\n              id=\"done\"\r\n              value={secondDate}\r\n            />\r\n          </label>\r\n          <button onClick={this.handleClick}>Dodaj</button>\r\n        </div>\r\n        <ul className=\"debtorsUl\">\r\n          <h1>Lista dłuzników ({this.state.tasks.length})</h1>\r\n          <AddList tasks={this.state.tasks} />\r\n        </ul>\r\n        <h2>Suma: {amount}zł</h2>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DebtorsPage;\r\n","import React, { Component } from \"react\";\nimport \"../styles/App.scss\";\nimport MainSite from \"./MainSite\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport DebtorsPage from \"../pages/DebtorsPage\";\n\nclass App extends Component {\n  state = {\n    tasks: []\n  };\n\n  render() {\n    return (\n      <>\n        <Router basename={process.env.PUBLIC_URL}>\n          <main>\n            <Route path=\"/\" exact component={MainSite} />\n            <Route path=\"/debtors\" component={DebtorsPage} />\n          </main>\n        </Router>\n      </>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}